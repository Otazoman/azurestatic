{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.5.6.12127",
        "templateHash": "14810353806615330445"
      }
    },
    "parameters": {
      "capacity": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Application Gateway instance number"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "ipName": {
        "type": "string",
        "defaultValue": "appGwIp",
        "metadata": {
          "description": "Static ip address name"
        }
      },
      "fqdn": {
        "type": "string",
        "defaultValue": "hoge.web.core.windows.net",
        "metadata": {
          "description": "Blobstorage static website url"
        }
      },
      "certData": {
        "type": "string",
        "defaultValue": "DefaultValue",
        "metadata": {
          "description": "Base-64 encoded form of the .pfx file"
        }
      },
      "certPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for .pfx certificate"
        }
      }
    },
    "variables": {
      "applicationGatewayName": "appGw",
      "publicIPAddressName": "[parameters('ipName')]",
      "virtualNetworkName": "appGwVnet1",
      "subnetName": "appGwSubnet",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
      "siteFqdn":  "[parameters('fqdn')]",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.1.0/24"
    },
    "resources": [
      {
        "apiVersion": "2021-04-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "sku": {
            "name": "Standard"
        },        
        "properties": {
          "publicIPAllocationMethod": "Static"
        }
      },
      {
        "apiVersion": "2021-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2021-04-01",
        "name": "[variables('applicationGatewayName')]",
        "type": "Microsoft.Network/applicationGateways",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
            "sku": {
                "name": "Standard_v2",
                "tier": "Standard_v2",
                "capacity": "[parameters('capacity')]"
            },
            "gatewayIPConfigurations": [
                {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[variables('subnetRef')]"
                      }
                    }
                  }
            ],
            "sslCertificates": [
                {
                    "name": "appGatewaySslCert",
                    "properties": {
                      "data": "[parameters('certData')]",
                      "password": "[parameters('certPassword')]"
                    }
                  }
            ],
            "frontendIPConfigurations": [
                {
                    "name": "appGatewayFrontendIP",
                    "properties": {
                      "PublicIPAddress": {
                        "id": "[variables('publicIPRef')]"
                      }
                    }
                  }
            ],
            "frontendPorts": [
                {
                    "name": "appGatewayFrontendPort",
                    "properties": {
                        "port": 443
                    }
                },
                {
                    "name": "appgatewayHttpPort",
                    "properties": {
                        "port": 80
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "appGatewayBackendPool",
                    "properties": {
                        "backendAddresses": [
                            {
                                "fqdn": "[parameters('fqdn')]"
                            }
                        ]
                    }
                }
            ],
            "backendHttpSettingsCollection": [
                {
                    "name": "appGatewayBackendHttpSettings",
                    "properties": {
                        "port": 443,
                        "protocol": "Https",
                        "cookieBasedAffinity": "Disabled",
                        "connectionDraining": {
                            "enabled": false,
                            "drainTimeoutInSec": 1
                        },
                        "pickHostNameFromBackendAddress": true,
                        "requestTimeout": 30
                    }
                }
            ],
            "httpListeners": [
                {
                    "name": "appGatewayHttpsListener",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/', variables('applicationGatewayName'), 'appGatewayFrontendIP')]"
                        },
                        "frontendPort": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', variables('applicationGatewayName'), 'appGatewayFrontendPort')]"
                        },
                        "protocol": "Https",
                        "sslCertificate": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates/', variables('applicationGatewayName'), 'appGatewaySslCert')]"
                        },
                        "requireServerNameIndication": false
                    }
                },
                {
                    "name": "appGatewayHttpListener",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/', variables('applicationGatewayName'), 'appGatewayFrontendIP')]"
                        },
                        "frontendPort": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', variables('applicationGatewayName'), 'appgatewayHttpPort')]"
                        },
                        "protocol": "Http",
                        "requireServerNameIndication": false
                    }
                }
            ],
            "requestRoutingRules": [
                {
                    "name": "httpsrule",
                    "properties": {
                        "ruleType": "Basic",
                        "httpListener": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', variables('applicationGatewayName'), 'appGatewayHttpsListener')]"
                        },
                        "backendAddressPool": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', variables('applicationGatewayName'), 'appGatewayBackendPool')]"
                        },
                        "backendHttpSettings": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection/', variables('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
                        }
                    }
                },
                {
                    "name": "redirectrule",
                    "properties": {
                        "ruleType": "Basic",
                        "httpListener": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', variables('applicationGatewayName'), 'appGatewayHttpListener')]"
                        },
                        "redirectConfiguration": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/redirectConfigurations/', variables('applicationGatewayName'), 'redirectconfig')]"
                        }
                    }
                }
            ],
            "redirectConfigurations": [
                {
                    "name": "redirectconfig",
                    "properties": {
                        "redirectType": "Permanent",
                        "targetListener": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', variables('applicationGatewayName'), 'appGatewayHttpsListener')]"
                        },
                        "includePath": true,
                        "includeQueryString": true,
                        "requestRoutingRules": [
                            {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/requestRoutingRules/', variables('applicationGatewayName'), 'redirectrule')]"
                            }
                        ]
                    }
                }
            ],
            "enableHttp2": true
        }
    }
  ]
}